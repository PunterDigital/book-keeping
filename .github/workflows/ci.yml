name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: bookkeeping_test
          MYSQL_USER: bookkeeper
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, zip, bcmath, intl, redis
        coverage: xdebug

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

    - name: Install PHP Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install NPM Dependencies
      run: npm ci

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create SQLite Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Build Assets
      run: npm run build

    - name: Clear Config Cache
      run: php artisan config:clear

    - name: Run Database Migrations
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --force

    - name: Run Database Seeders
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan db:seed --force

    - name: Execute Unit Tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
        REDIS_HOST: 127.0.0.1
        REDIS_PORT: 6379
        MAIL_MAILER: array
        QUEUE_CONNECTION: sync
      run: php artisan test --coverage --min=80

    - name: Run PHPStan Analysis
      run: |
        composer require --dev phpstan/phpstan larastan/larastan --no-interaction
        ./vendor/bin/phpstan analyse --memory-limit=2G

    - name: Upload Coverage Reports
      if: success()
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella